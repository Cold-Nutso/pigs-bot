(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("message").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,a,s)=>{const c=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),l=await c.json();document.getElementById("message").classList.add("hidden"),l.error&&t(l.error),l.redirect&&(window.location=l.redirect),s&&s(l)},hideError:()=>{document.getElementById("message").classList.add("hidden")}}}},t={};function a(s){var c=t[s];if(void 0!==c)return c.exports;var l=t[s]={exports:{}};return e[s](l,l.exports,a),l.exports}(()=>{const e=a(603),t=async e=>{let t="------default-----";e&&(t=e);const a=await fetch(`/getPlayer/discordID=${t}`),s=await a.json();s.error&&ReactDOM.render(React.createElement("p",{class:"error"},s.error),document.getElementById("input")),s.player?ReactDOM.render(React.createElement(l,{stats:s.player}),document.getElementById("playerStats")):ReactDOM.render(React.createElement("p",{class:"error"},"No statistics found!"),document.getElementById("playerStats"))},s=a=>{a.preventDefault(),e.hideError();const s=a.target.querySelector("#discordID").value;return t(s),!1},c=e=>React.createElement("form",{id:"statsForm",onSubmit:s,name:"statsForm",action:"/getPlayer",method:"GET",className:"statsForm"},React.createElement("div",null,React.createElement("label",{htmlFor:"discordID"},"Enter a Discord ID: "),React.createElement("input",{id:"discordID",type:"text",name:"discordID",placeholder:"915117668451901461"}),React.createElement("p",null,"Cold Nutso - 332256896599851008"),React.createElement("p",null,"Pigs Bot - 915117668451901461")),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"formSubmit",type:"submit",value:"Search for Stats"})),l=e=>{const t=e.stats;return React.createElement("div",{id:"stats"},React.createElement("h1",null,t.name,"'s Statistics"),React.createElement("div",{class:"numbers"},React.createElement("div",null,React.createElement("p",{class:"head"},React.createElement("span",{class:"sig"},t.games)," games played"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.wins)," wins"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.losses)," losses")),React.createElement("div",null,React.createElement("p",{class:"head"},React.createElement("span",{class:"sig"},t.rolls[0])," total rolls"),React.createElement("div",{class:"dice"},React.createElement("p",null,React.createElement("span",{class:"sig"},t.rolls[1])," 1's"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.rolls[2])," 2's"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.rolls[3])," 3's"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.rolls[4])," 4's"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.rolls[5])," 5's"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.rolls[6])," 6's"))),React.createElement("div",null,React.createElement("p",{class:"head"},React.createElement("span",{class:"sig"},t.turns)," turns taken"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.profit)," points earned"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.busts)," times busted"),React.createElement("p",null,React.createElement("span",{class:"sig"},t.bros)," times bro'd"))))};window.onload=async()=>{const e=await fetch("/getToken"),a=await e.json();ReactDOM.render(React.createElement(c,{csrf:a.csrfToken}),document.getElementById("input")),t()}})()})();